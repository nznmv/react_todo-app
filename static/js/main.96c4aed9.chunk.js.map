{"version":3,"sources":["components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","App.js","index.js"],"names":["Todo","todoItem","deleteTodo","itemsList","useState","currentKey","setKey","complete","completeToggle","className","cn","completed","id","type","onClick","key","find","item","title","TodoList","setDeleteId","length","deletedItemIndex","findIndex","splice","map","App","todoItems","updateList","todoValue","todoSetValue","handleSet","Date","trim","useEffect","console","log","onSubmit","event","preventDefault","handleSubmit","placeholder","value","onChange","target","htmlFor","filter","href","ReactDOM","render","document","getElementById"],"mappings":"oTAGaA,EAAO,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAAgB,EAC9BC,mBAAS,GADqB,mBACpDC,EADoD,KACxCC,EADwC,OAExBF,oBAAS,GAFe,mBAEpDG,EAFoD,KAE1CC,EAF0C,KAW3D,OACE,wBACEC,UACEC,IAAG,CAACC,UAAWV,EAASW,KAAOP,GAAcE,KAG/C,yBAAKE,UAAU,QACb,2BACEI,KAAK,WACLJ,UAAU,SACVK,QAAS,kBAjBKC,EAiBcd,EAASW,GAhB3CJ,IACAL,EAAUa,MAAK,SAAAC,GAAI,OAAIA,EAAKL,KAAOG,KAAKJ,UAAYJ,OACpDD,EAAOS,GAHY,IAACA,KAmBhB,+BAAQd,EAASiB,OACjB,4BACEL,KAAK,SACLJ,UAAU,UACVK,QAAS,kBAAMZ,EAAWD,EAASW,QAGvC,2BAAOC,KAAK,OAAOJ,UAAU,WC9BtBU,EAAW,SAAC,GAAiB,IAAhBhB,EAAe,EAAfA,UAAe,EACPC,mBAAS,GADF,mBACtBgB,GADsB,WAGvC,GAAIjB,EAAUkB,QAAU,EACtB,OAAO,KAGT,IAAMnB,EAAa,SAACa,GAClBK,EAAYL,GACZ,IAAMO,EAAmBnB,EAAUoB,WAAU,SAAAN,GAAI,OAAIA,EAAKL,KAAOG,KACjEZ,EAAUqB,OAAOF,EAAkB,IAGrC,OACE,wBAAIb,UAAU,aACXN,EAAUsB,KAAI,SAAAR,GAAI,OACjB,kBAAC,EAAD,CACEF,IAAKE,EAAKL,GACVX,SAAUgB,EACVf,WAAYA,EACZC,UAAWA,SCsENuB,MAxFf,WAAgB,IAAD,EACmBtB,mBAAS,IAD5B,mBACNuB,EADM,KACKC,EADL,OAEqBxB,mBAAS,IAF9B,mBAENyB,EAFM,KAEKC,EAFL,KAIPC,EAAY,SAACF,GAEjB,MAAQ,CACRjB,IAAK,IAAIoB,KACTd,MAAOW,EAAUI,OACjBtB,WAAW,IAwBb,OAFFuB,qBAAU,kBAAKC,QAAQC,IAAIT,MAGvB,6BAASlB,UAAU,WACjB,4BAAQA,UAAU,UAChB,qCAEA,0BACE4B,SAAU,SAACC,GAAD,OApBG,SAACA,GAGpB,GAFAA,EAAMC,kBAEFV,GAAkC,KAArBA,EAAUI,OAEzB,OADAH,EAAa,IACN,KAGTF,EAAW,GAAD,mBAAKD,GAAL,CAAgBI,EAAUF,MACpCC,EAAa,IAWcU,CAAaF,KAElC,2BACEzB,KAAK,OACLJ,UAAU,WACVgC,YAAY,yBACZC,MAAOb,EACPc,SAAU,SAAAL,GAAK,OAAIR,EAAaQ,EAAMM,OAAOF,YAKnD,6BAASjC,UAAU,QACjB,2BAAOI,KAAK,WAAWD,GAAG,aAAaH,UAAU,eACjD,2BAAOoC,QAAQ,cAAf,wBAEA,kBAAC,EAAD,CACE1C,UAAWwB,EACXC,WAAYA,KAIhB,4BAAQnB,UAAU,UAChB,0BAAMA,UAAU,cA/CfkB,EAAUmB,QAAO,SAAA7B,GAAI,OAAKA,EAAKN,aAAWU,QAmD3C,wBAAIZ,UAAU,WACZ,4BACE,uBAAGsC,KAAK,KAAKtC,UAAU,YAAvB,QAGF,4BACE,uBAAGsC,KAAK,YAAR,WAGF,4BACE,uBAAGA,KAAK,eAAR,eAIJ,4BAAQlC,KAAK,SAASJ,UAAU,mBAAhC,sBC5ERuC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.96c4aed9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport cn from 'classnames';\n\nexport const Todo = ({ todoItem, deleteTodo, itemsList }) => {\n  const [currentKey, setKey] = useState(0);\n  const [complete, completeToggle] = useState(false);\n\n  const handleToggle = (key) => {\n    completeToggle()\n    itemsList.find(item => item.id === key).completed = complete;\n    setKey(key);\n  };\n\n\n  return (\n    <li\n      className={\n        cn({completed: todoItem.id === currentKey && complete})\n      }\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          onClick={() => handleToggle(todoItem.id)}\n        />\n        <label>{todoItem.title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => deleteTodo(todoItem.id)}\n        />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Todo } from \"../Todo/Todo\";\n\nexport const TodoList = ({itemsList}) => {\n  const [deleteId, setDeleteId] = useState(0);\n\n  if (itemsList.length <= 0) {\n    return null;\n  }\n\n  const deleteTodo = (key) => {\n    setDeleteId(key);\n    const deletedItemIndex = itemsList.findIndex(item => item.id === key);\n    itemsList.splice(deletedItemIndex, 1);\n  }\n\n  return (\n    <ul className=\"todo-list\">\n      {itemsList.map(item =>\n        <Todo\n          key={item.id}\n          todoItem={item}\n          deleteTodo={deleteTodo}\n          itemsList={itemsList}\n        />\n      )}\n    </ul>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport {TodoList } from './components/TodoList/TodoList'\n\n\n\nfunction App() {\n  const [todoItems, updateList] = useState([]);\n  const [todoValue, todoSetValue] = useState('');\n\n  const handleSet = (todoValue) => {\n\n    return ({\n    id: +new Date(),\n    title: todoValue.trim(),\n    completed: false,\n    });\n  };\n\n  const itemsLeft = () => {\n\n  return todoItems.filter(item => !item.completed).length;\n  }\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if(!todoValue || todoValue.trim() === '' ) {\n      todoSetValue('');\n      return null;\n    }\n\n    updateList([...todoItems, handleSet(todoValue)]);\n    todoSetValue('');\n  }\n\nuseEffect(()=> console.log(todoItems));\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form\n          onSubmit={(event) => handleSubmit(event)}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={todoValue}\n            onChange={event => todoSetValue(event.target.value)}\n          />\n        </form>\n      </header>\n\n      <section className=\"main\">\n        <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <TodoList\n          itemsList={todoItems}\n          updateList={updateList}\n        />\n      </section>\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {itemsLeft()}\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a href=\"#/\" className=\"selected\">All</a>\n          </li>\n\n          <li>\n            <a href=\"#/active\">Active</a>\n          </li>\n\n          <li>\n            <a href=\"#/completed\">Completed</a>\n          </li>\n        </ul>\n\n        <button type=\"button\" className=\"clear-completed\">\n          Clear completed\n        </button>\n      </footer>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}